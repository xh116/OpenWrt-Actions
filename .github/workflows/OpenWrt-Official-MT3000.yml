#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# <https://github.com/82kg/autoBuildOP>

name: OpenWrt-Official-MT3000
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false
  #schedule:
    #- cron: 0 23 * * *
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
          libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
          ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
          python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
          upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          df -h

      - name: Clone source code
        env: 
          REPO_URL:  https://github.com/immortalwrt/immortalwrt
          REPO_BRANCH: master
        run: |
          git clone -b $REPO_BRANCH --single-branch --filter=blob:none $REPO_URL   
          git pull
          
      - name: Add Services
        working-directory: ./immortalwrt
        run: |
        #  echo "src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main" >> feeds.conf.default
        #  echo "src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2.git;main" >> feeds.conf.default     
        # echo "src-git helloworld https://github.com/fw876/helloworld" >> feeds.conf.default
        # echo "src-git infinityfreedom https://github.com/xiaoqingfengATGH/luci-theme-infinityfreedom.git"  >> feeds.conf.default
 
      - name: Update feeds and dependencies
        working-directory: ./immortalwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a 
          ./scripts/feeds update packages  

          
      - name: Load custom configuration
        run: |
          mv  ImmortalWrt/.config-mt3000 immortalwrt/.config
               
      - name: Make download
        working-directory: ./immortalwrt
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
        # sed -i 's/192.168.1.1/192.168.1.10/g' package/base-files/files/bin/config_generate   
        
      - name: Compile firmware
        working-directory: ./immortalwrt
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
          
      - name: Assemble artifact
        working-directory: ./immortalwrt
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*sysupgrade*" | xargs -i mv -f {} ./artifact/
          mv ./.config ./artifact/

       # find ./bin/targets/ -name "*combined*vmdk*" | xargs -i mv -f {} ./artifact/
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt firmware
          path: immortalwrt/artifact
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 30
          keep_minimum_runs: 5
 
