#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# <https://github.com/82kg/autoBuildOP>

name: OpenWrt-CI-lean-ssrp+
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manual Trigger'
        required: false
        default: 'Build'
  #schedule:
    #- cron: 0 23 * * *
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          df -h

      - name: Clone source code
        env: 
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
      - name: Add helloword
        working-directory: ./openwrt
        run: |
          echo "src-git helloworld https://github.com/fw876/helloworld" >> feeds.conf.default          
          echo "src-git passwall_packages https://github.com/xiaorouji/openwrt-passwall-packages.git;main" >> feeds.conf.default
          echo "src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2.git;main" >> feeds.conf.default  
          git clone https://github.com/gngpp/luci-theme-design.git  package/luci-theme-design        
          git clone https://github.com/gngpp/luci-app-design-config.git package/luci-app-design-config
          
      - name: Update feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a         
      
      #- name: Set EN as default language
       # working-directory: ./openwrt
        #run: |
         # sed -i '/option lang auto/s/auto/en/g'  ./feeds/luci/modules/luci-base/root/etc/config/luci   
          
      - name: Load custom configuration
        run: |
          mv OpenWrt_Lean/.config_ssrp openwrt/.config

      - name: Make download
        working-directory: ./openwrt
        run: |
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
                     
      - name: Compile firmware
        working-directory: ./openwrt
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
          
      - name: Assemble artifact
        working-directory: ./openwrt
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*combined*vmdk*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*rootfs.tar*" | xargs -i mv -f {} ./artifact/
          mv ./.config ./artifact/

       # find ./bin/targets/ -name "*combined*vmdk*" | xargs -i mv -f {} ./artifact/
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt firmware
          path: openwrt/artifact
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 30
          keep_minimum_runs: 5
 
